services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "8001:80"
    volumes:
      - .:/src
    environment:
      - ENVIRON=prd
      - TIMEZONE=America/Sao_Paulo
      - USERNAME_API=vert
      - PASSWORD_API=vert
      - DATABASE=vert_db
      - DATABASE_HOST=postgres
      - DATABASE_USER=vert
      - DATABASE_PASSWORD=vert
      - KAFKA_HOST=kafka
      - TOPIC_PRODUCTS=produtos-persistidos
      - CONSUMER_GROUP=consumer-group
    command: python main.py
    depends_on:
      - postgres

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=vert
      - POSTGRES_USER=vert
      - POSTGRES_DB=vert_db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=vert
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

networks:
  default:
    driver: bridge

volumes:
  kafka_data:
    driver: local
